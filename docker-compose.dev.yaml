services:
  open-webui:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: open-webui
    volumes:
      - open-webui:/app/backend/data
      - ./backend:/app/backend
    tty: true
    command: /bin/bash
    ports:
      - ${OPEN_WEBUI_PORT-3000}:8080
    env_file:
      - .env
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    networks:
      - redstone

  data-processor:
    build:
      dockerfile: Dockerfile.data-processor
    container_name: data-processor
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - backend/data:/app/backend/data
    networks:
      - redstone

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "password"]
    networks:
      - redstone

  qdrant:
    image: qdrant/qdrant:v1.13.4
    restart: unless-stopped
    container_name: vector-db
    ports:
      - 6333:6333
      - 6334:6334
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
      - QDRANT__LOG_LEVEL=INFO
    volumes:
      - qdrant_data:/qdrant/storage
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - redstone

  postgres:
    image: postgres:17.2-bookworm
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-redstone}  # This ensures the database is created on startup
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-redstone}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - redstone
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-dev@yitec.group}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-redstone}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - redstone
    restart: unless-stopped

volumes:
  open-webui: {}
  qdrant_data: {}
  postgres: {}
  pgadmin: {}
networks:
  redstone: